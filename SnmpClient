public SNMPClient(String address) 
{
    this.address = 192.168.174.134;
}
public static void main(String[] args) throws IOException 
{
    SNMPClient client = new SNMPClient("udp:192.168.56.1/161");
    client.start();
    String sysDescr = client.getAsString(new OID(".1.3.6.1.2.1.1.1.0"));
    System.out.println(sysDescr);
}
private void start() throws IOException 
{
    TransportMapping transportMapping = new DefaultUdpTransportMapping();
    snmp = new Snmp(transportMapping);
    transportMapping.listen();
}
public String getAsString(OID oid) throws IOException 
{
    ResponseEvent event = get(new OID[]{oid});
    return event.getResponse().get(0).getVariable().toString();
}
public ResponseEvent get(OID oids[]) throws IOException 
{
    PDU pdu = new PDU();
    for(OID oid : oids)
	{
        pdu.add(new VariableBinding(oid));
    }
    pdu.setType(PDU.GET);
    ResponseEvent event = snmp.send(pdu, getTarget(),null);
    if(event != null)
	{
        return event;
    }
    throw new RuntimeException("Get time out");
}
private Target getTarget(){
    Address targetAddress = GenericAddress.parse(address);
    CommunityTarget target = new CommunityTarget();
    target.setCommunity(new OctetString("public"));
    target.setAddress(targetAddress);
    target.setRetries(2);
    target.setTimeout(1500);
    target.setVersion(SnmpConstants.version2c);
    return target;
}